/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-08-18 08:54:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.professors.class_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.sun.classes.model.vo.Classes;
import com.sun.classHistory.model.vo.ClassHistory;
import com.sun.user.model.vo.User;

public final class professorsGradeView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/professors/class/../../../views/common/menubar.jsp", Long.valueOf(1629208540000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sun.classes.model.vo.Classes");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.sun.classHistory.model.vo.ClassHistory");
    _jspx_imports_classes.add("com.sun.user.model.vo.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
	
	ArrayList<Classes> classList = (ArrayList<Classes>)request.getAttribute("classList");
	ArrayList<ClassHistory> chList = (ArrayList<ClassHistory>)request.getAttribute("chList");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#class-table {\r\n");
      out.write("	margin-top: 50px;\r\n");
      out.write("	margin-left:5%;\r\n");
      out.write("	width: 90%;\r\n");
      out.write("	border: 3px solid #00205b;\r\n");
      out.write("	border-collapse: collapse; /* 내부 테두리 없애기 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("	padding:30px;\r\n");
      out.write("	border: 1px solid white;\r\n");
      out.write("	background-color: #00205b;\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("td{\r\n");
      out.write("	padding:30px;\r\n");
      out.write("	border: 1px solid #00205b;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	color: #00205b;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");

User loginUser = (User) session.getAttribute("loginUser");
String msg = (String) session.getAttribute("msg");
String contextPath = request.getContextPath();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("<!--login이 안 되어있을 때의 style --> \r\n");
      out.write("body {\r\n");
      out.write("	background-color:#dae6f0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form {\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("	margin-left: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("	padding-top: 10px;\r\n");
      out.write("	padding-right: 8px;\r\n");
      out.write("}\r\n");
      out.write("span{\r\n");
      out.write("	color:black;\r\n");
      out.write("}\r\n");
      out.write("#find-div>a {\r\n");
      out.write("	color: white;\r\n");
      out.write("	display: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#main-container {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	margin-top: 100px;\r\n");
      out.write("	margin-left: 100px;\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	height: 500px;\r\n");
      out.write("	background-color: #63718b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#main-logo, #main-img {\r\n");
      out.write("	display: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#main-div {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	margin-top: 100px;\r\n");
      out.write("	margin-left: 200px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login-btn {\r\n");
      out.write("	height: 70px;\r\n");
      out.write("	width: 70px;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	border: 0;\r\n");
      out.write("	outline: 0;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#lock-div {\r\n");
      out.write("	margin-top: 120px;\r\n");
      out.write("	margin-left: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login-text {\r\n");
      out.write("	font-size: 70px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#lock-img {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	vertical-align: text-bottom;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#find-div {\r\n");
      out.write("	margin-left: 100px;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--login이 되어있을 때의 style -->\r\n");
      out.write(" #logo { display:block-inline;\r\n");
      out.write("	padding-right: 80%;\r\n");
      out.write("	text-decoration-line: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login-user-name, #logout {\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#topMenu {\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	background-color: #00205b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#topMenu ul li {\r\n");
      out.write("	list-style: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	background-color: #00205b;\r\n");
      out.write("	float: left;\r\n");
      out.write("	line-height: 50px;\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-left: 10%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#topMenu .menuLink {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	display: block;\r\n");
      out.write("	width: 125px;\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#topMenu .menuLink:hover {\r\n");
      out.write("	color: #092d70;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	$( function(){\r\n");
      out.write("		var msg=\"");
      out.print(msg);
      out.write("\";\r\n");
      out.write("		if (msg != \"null\") {\r\n");
      out.write("			alert(msg);\r\n");
      out.write("			");
session.removeAttribute("msg");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("	})\r\n");
      out.write("\r\n");
      out.write("	function loginVaildate() {\r\n");
      out.write("		console.log(\"tq,,,,좀 돼라,,,\");\r\n");
      out.write("		\r\n");
      out.write("		if ($(\"#userId\").val().trim().length == 0) {\r\n");
      out.write("			alert(\"아이디를 입력하세요\");\r\n");
      out.write("			$(\"#userId\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if ($(\"#userPwd\").val().trim().length == 0) {\r\n");
      out.write("			alert(\"비밀번호를 입력하세요\");\r\n");
      out.write("			$(\"#userPwd\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		return true;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		");

		if (loginUser == null) {
		
      out.write("\r\n");
      out.write("		<div>\r\n");
      out.write("			<div id=\"main-div\">\r\n");
      out.write("				<img id=\"main-logo\" src=\"resources/images/sunLogo1.png\" alt=\"\"\r\n");
      out.write("					width=\"200px\"> <img id=\"main-img\"\r\n");
      out.write("					src=\"resources/images/sunUni.jpg\" alt=\"\" width=\"500px\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"main-container\">\r\n");
      out.write("				<div id=\"lock-div\">\r\n");
      out.write("					<img id=\"lock-img\" src=\"resources/images/lock.png\" alt=\"\"\r\n");
      out.write("						width=\"100px\"> <span id=\"login-text\">LOGIN</span>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<form id=\"loginForm\" action=\"");
      out.print(request.getContextPath());
      out.write("/login\" method=\"post\" onsubmit=\"return loginVaildate();\">\r\n");
      out.write("					<table>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th><label for=\"userId\">아이디</label></th>\r\n");
      out.write("							<td><input type=\"text\" id=\"userId\" name=\"userId\"></td>\r\n");
      out.write("\r\n");
      out.write("							<td rowspan=\"2\"><button type=\"submit\" id=\"login-btn\">로그인</button></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th><label for=\"userPwd\">비밀번호</label></th>\r\n");
      out.write("							<td><input type=\"password\" id=\"userPwd\" name=\"userPwd\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</table>\r\n");
      out.write("				</form>\r\n");
      out.write("\r\n");
      out.write("				<div id=\"find-div\">\r\n");
      out.write("					<a href=\"\">>학번/교직원 번호 찾기</a> \r\n");
      out.write("					<a href=\"\">>비밀번호 초기화 </a>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		} else {
		
      out.write("\r\n");
      out.write("		<a id='logo'> <img src=\"resources/images/sunLogo1.png\" width=\"140px\"\r\n");
      out.write("			height=\"70px\">\r\n");
      out.write("		</a> <span id=\"login-user-name\"> ");
      out.print(loginUser.getUserName() );
      out.write("님\r\n");
      out.write("			<a href = \"");
      out.print(contextPath);
      out.write("/logout\">로그아웃</a> <span>\r\n");
      out.write("	</header>\r\n");
      out.write("	<nav id=\"topMenu\">\r\n");
      out.write("	");

	if (Character.toUpperCase(loginUser.getUserId().charAt(0)) == 'A') { //관리자
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<ul>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"location='");
      out.print(contextPath);
      out.write("/list.st'\">학생 관리</div></li>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"goManageProfessors();\">교수 관리</div></li>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"goManageClass();\">강의 관리</div></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	");

	} else if (Character.toUpperCase(loginUser.getUserId().charAt(0)) == 'P') { //교수
	
      out.write("\r\n");
      out.write("	<ul>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"goProfessorsClass();\">강의</div></li>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"goProfessorsGrade();\">성적</div></li>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"goProfessorsConsulting();\">상담</div></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("\r\n");
      out.write("	");

	} else { // 학생
	
      out.write("\r\n");
      out.write("	<ul>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"goStudentRegister();\">학적</div></li>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"goStudentConsulting();\">상담</div></li>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"goStudentGrade();\">성적</div></li>\r\n");
      out.write("		<li><div class=\"menuLink\" onclick=\"goCertificate();\">증명서발급</div></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	");
}}
      out.write("\r\n");
      out.write("	</nav>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("	function goProfessorsClass(){\r\n");
      out.write("		location.href=\"");
      out.print(request.getContextPath());
      out.write("/classList.pr\";\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function goProfessorsGrade(){\r\n");
      out.write("		location.href=\"");
      out.print(request.getContextPath());
      out.write("/gradeList.pr\";\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function goProfessorsConsulting(){\r\n");
      out.write("		location.href=\"");
      out.print(request.getContextPath());
      out.write("/consultingList.pr\";\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("	<h3>강의 목록 조회</h3>\r\n");
      out.write("	<div>\r\n");
      out.write("	<select name=\"className\">\r\n");
      out.write("		");
if(!classList.isEmpty()){ 
      out.write("\r\n");
      out.write("			");
for(Classes c : classList){ 
      out.write("\r\n");
      out.write("				<option value=\"");
      out.print( c.getClassNo() );
      out.write('"');
      out.write('>');
      out.print( c.getClassName() );
      out.write("</option>\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("		");
} else{
      out.write("\r\n");
      out.write("			<option value=\"\">조회된 강의가 없습니다.</option>\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("	</select>\r\n");
      out.write("	<button id=\"select-class-btn\">선택</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"student-classHistory-List-Area\">\r\n");
      out.write("		<table id=\"class-table\">\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>학번</th>\r\n");
      out.write("				<th>이름</th>\r\n");
      out.write("				<th>학과명</th>\r\n");
      out.write("				<th>성적</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody>\r\n");
      out.write("			");
if(chList.isEmpty()){ 
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"4\">조회된 학생이 없습니다.</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			");
}else{ 
      out.write("\r\n");
      out.write("				");
 for(ClassHistory ch : chList){ 
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>");
      out.print( ch.getClassNo() );
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				");
} 
      out.write("\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("		</tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
